---controllerについて---
new -> create -> show
index -> update -> edit

---select_tagよりcollection_select---
<%= f.collection_select :genre_id, Genre.all, :id, :name, {prompt: "--選択してください--"} %>

---genre_id(外部キー)の読み込みがされない---
belongs_to :genre(通常はこれでO.KだがN.Gだった場合）
belongs_to :genre　optional: true(追加）
validates :genre_id, presence: true(optionalだったので追記）

---1:Nの確認---
Genre(1) : Item(N)の場合
has_many :items
belongs_to :genre

---statusならradio_button---
<%= f.radio_button :is_active, :true %>
<%= f.radio_button :is_active, :false %>

<%= item.is_active ? '販売中' : '販売停止中' %>

---migrateの編集方法---
rails db:rollback (一個前に戻す）
rails db:migrate:status(downになればswitched off状態)-->ファイル編集可
rails db:migrateを行いstatusでupになっていれば完了

---rails c---
Item.find(1).destroy(id 1を特定削除）
Item.destroy_all(Itemのデータ一括削除）

---sign in, sign up後の遷移先の設定---
application_controller.rbに記載（deviseが複数存在し一括で設定する場合）
----sign in後----
seesion_controller.rbに記載（各deviseに違う遷移先を設定する場合）
-----sign in後-----
registrations_controller.rbに記載
------記載の仕方------
def after_sign_up_path_for(resource)
  #パス名_path

---routes記載の注意点
Devise １番上
get 2番目
resources　３番

---current_customerの受渡し---
1.registrations_controllerに下記パラメーターを記載

def configure_permitted_parameters
  devise_parameter_sanitizer.permit(:sign_up, keys: [:last_name, :first_name, :last_name_kana, :first_name_kana, :is_active, :price, :email, :encrypted_password, :postal_code, :address, :telephone_number])
end

2.customer.rb (customer.newの役割をしている）

こちらの1:N記載でaddressesが複数になっていなかったので
住所の初期値に異常が出ていた。
カラムのaddressとcustomer.rbのaddressが被っていた為。

----cart_item undefine method----
current_customerに異常有り、
relation出来てなかった。

----cart_item削除について----
                  #ifのブロック変数 ＋ updateのpath (ブロック変数.id)
<%= form_with model: cart, url: public_cart_item_path(cart.id), local: true do |f| %>

--以下controller--
def index
    @cart_items = CartItem.all
end

def update
  @cart_items = CartItem.all
  @cart_item = CartItem.find(params[:id])
  if @cart_item.update(cart_item_params)
    redirect_to public_cart_items_path #redirect_to は indexへ#
  else
    render 'index' #render は index の viewを読み込むので @cart_items = CartItem.allも追加する。
  end
end

----登録した住所の表示----
                                                                          (model内のassosiationがaddresses)
<%= collection_select(:regestrated_address, :regestrated_address, current_customer.addresses.all, :id, :address, prompt: "住所を選択してください" )%>

---購入履歴表示方法----

assosiationを確認。ordersにはitem_idはカラムに存在しないので使用不可。
order_detailsにはorder_detailsにはあるのでこちらを使用。
orderは@ordersでcurrent_customerのallをeachで取り出した物。
<% order.order_details.each do |order_detail| %>
<%= order_detail.item.name %><br> （order_detail内のitemのname表示。）
<% end %>_

---each内の<th>をループしない方法---
<th>をeach, endの外に出す。

---controller内のルール---
@order = Order.find(params[:id]) #id取得時
@order = Order.find(order_params)#create or updateのとき